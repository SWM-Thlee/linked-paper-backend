plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.diffplug.spotless" version "6.20.0"
	id "io.sentry.jvm.gradle" version "4.11.0"
}

group = 'swm.thlee'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	developmentOnly 'me.paulschwarz:spring-dotenv:2.5.4'
	implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.15.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		googleJavaFormat() // 구글 Java 포맷을 적용합니다.
	}
}


sentry {
	// Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
	// This enables source context, allowing you to see your source
	// code as part of your stack traces in Sentry.
	includeSourceContext = true

	org = "software-maestro-9s"
	projectName = "java-spring-boot"
	authToken = System.getenv("SENTRY_AUTH_TOKEN")
}